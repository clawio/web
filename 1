import Ember from 'ember';

export default Ember.Route.extend({
	metaData: Ember.inject.service('metadata'),

	willTransition() {
		console.log('wiil from index');
	},
	model(params) {
		return Ember.RSVP.hash({
			objects: this.get('metaData').list(params.pathspec),
			breadcrumbs: this.get('pathspecToBreadcrumbs')(params.pathspec),
		});
	},

	actions: {
		list(pathspec) {
		        pathspec = pathspec.replace(/^\/|\/$/g, '');
			console.log("route.admin.objects:", pathspec);
			this.transitionTo('admin.objects.list', pathspec);
		},

		delete(pathspec) {
			let deleting = this.get('metaData').delete(pathspec);
			deleting
			.then(() => {
				console.log("deletion ok!");
			})
			.catch((res) => {
				console.log(res, "cannot delete");
			})
		},
	},

	pathspecToBreadcrumbs(pathspec) {
		console.log(pathspec);
		if (!pathspec) {
			return [];
		}
		pathspec = pathspec.replace(/^\/|\/$/g, '');
		var current = pathspec;
		var parts = current.split('/');
		var previousPath = "";
		var breadcrumbCollection = [];
		for(var i = 0; i < parts.length; i++ ) {
			var newPath = previousPath + '/' + parts[i];
			var name = parts[i];
			breadcrumbCollection.push({
				pathspec: newPath,
				name: name
			});
			previousPath = newPath;
		}
		console.log(breadcrumbCollection);
		return breadcrumbCollection;
	},
});
